{
	"openapi": "3.0.0",
	"paths": {
		"/v2/aircrafts/manufacturers": {
			"get": {
				"operationId": "AircraftsManufacturesController_index",
				"parameters": [
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in aircrafts manufactures names",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of aircrafts manufactures",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AircraftManufactureDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/aircrafts/manufacturers/{id}": {
			"get": {
				"operationId": "AircraftsManufacturesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Manufacture ID",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return an Aircraft Manufacture",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AircraftManufactureDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/aircrafts/equipments": {
			"get": {
				"operationId": "AircraftsEquipmentsController_index",
				"parameters": [
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in aircrafts equipment names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Find by aircraft equipment statet",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of aircrafts equipments",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AircraftsEquipmentDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/aircrafts/equipments/{id}": {
			"get": {
				"operationId": "AircraftsEquipmentsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Manufacture ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return an Aircraft Manufacture",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AircraftsEquipmentDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/aircrafts/transponderTypes": {
			"get": {
				"operationId": "AircraftsTransponderTypesController_index",
				"parameters": [
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in aircrafts transponder type names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": false,
						"in": "query",
						"description": "String to find in aircrafts transponder type by type",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Find by aircraft equipment statet",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of aircrafts transponder types",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AircraftTransponderTypeDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/aircrafts/transponderTypes/{id}": {
			"get": {
				"operationId": "AircraftsTransponderTypesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Manufacture ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return an Aircraft Manufacture",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AircraftTransponderTypeDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/aircrafts": {
			"get": {
				"operationId": "AircraftsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "description",
						"required": false,
						"in": "query",
						"description": "String to find in aircrafts description",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "manufactureId",
						"required": false,
						"in": "query",
						"description": "Manufacture of the aircraft",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of aircrafts",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedAircraftDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/aircrafts/all": {
			"get": {
				"operationId": "AircraftsController_all",
				"parameters": [
					{
						"name": "description",
						"required": false,
						"in": "query",
						"description": "String to find in aircrafts description",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "manufactureId",
						"required": false,
						"in": "query",
						"description": "Manufacture of the aircraft",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "hasBaseModels",
						"required": false,
						"in": "query",
						"description": "Check if the simulator version has baseModels",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of aircrafts",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AircraftDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/aircrafts/{icaoCode}": {
			"get": {
				"operationId": "AircraftsController_show",
				"parameters": [
					{
						"name": "icaoCode",
						"required": true,
						"in": "path",
						"description": "Aircraft ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return an Aircraft",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AircraftDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/aircrafts/{aircraftId}/variants": {
			"get": {
				"operationId": "AircraftsVariantsController_index",
				"parameters": [
					{
						"name": "aircraftId",
						"required": true,
						"in": "path",
						"description": "Aircraft ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of aircrafts variants",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AircraftVariantDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircrafts",
					"aircraftsVariants"
				]
			}
		},
		"/v2/aircraftsVariants/{id}": {
			"get": {
				"operationId": "AircraftVariantsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Aircraft Variant ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return an Aircraft Variant",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AircraftVariantDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"aircraftsVariants"
				]
			}
		},
		"/v2/airlines": {
			"get": {
				"operationId": "AirlinesController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in airlines names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "realBased",
						"required": false,
						"in": "query",
						"description": "Real based airline",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of airlines",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedAirlineDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airlines"
				]
			}
		},
		"/v2/airlines/all": {
			"get": {
				"operationId": "AirlinesController_all",
				"parameters": [
					{
						"name": "hasTextures",
						"required": false,
						"in": "query",
						"description": "Check of the airline has textures",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of airlines",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AirlineDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airlines"
				]
			}
		},
		"/v2/airlines/{icao}": {
			"get": {
				"operationId": "AirlinesController_show",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airline ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return an Airline",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AirlineDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airlines"
				]
			}
		},
		"/v2/airlines/{icao}/logo": {
			"get": {
				"operationId": "AirlinesController_logo",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airline ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return an Airline"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airlines"
				]
			}
		},
		"/v2/airlines/{icao}/routes": {
			"get": {
				"operationId": "AirlinesController_routes",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airline ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return airline routes",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/RouteDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airlines"
				]
			}
		},
		"/v2/airports": {
			"get": {
				"operationId": "AirportsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in airports names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "region",
						"required": false,
						"in": "query",
						"description": "Region in which the airport is located",
						"schema": {
							"enum": [
								"Africa",
								"Americas",
								"Asia",
								"Europe",
								"Oceania"
							],
							"type": "string"
						}
					},
					{
						"name": "countryId",
						"required": false,
						"in": "query",
						"description": "Country in which the airport is located",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "includeRunways",
						"required": false,
						"in": "query",
						"description": "Include all airport runways",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of airports",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedAirportDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports"
				]
			}
		},
		"/v2/airports/all": {
			"get": {
				"operationId": "AirportsController_all",
				"parameters": [
					{
						"name": "region",
						"required": false,
						"in": "query",
						"description": "Region in which the airport is located",
						"schema": {
							"enum": [
								"Africa",
								"Americas",
								"Asia",
								"Europe",
								"Oceania"
							],
							"type": "string"
						}
					},
					{
						"name": "countryId",
						"required": false,
						"in": "query",
						"description": "Country in which the airport is located. <b>Required if used with <code>includeRunways</code></b>",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "includeRunways",
						"required": false,
						"in": "query",
						"description": "Include all airport runways",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of airports",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AirportDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports"
				]
			}
		},
		"/v2/airports/{icao}": {
			"get": {
				"operationId": "AirportsController_show",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airport ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return an Airport",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AirportDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports"
				]
			}
		},
		"/v2/antennas/subjacent/{callsign}": {
			"get": {
				"operationId": "AntennasController_show",
				"parameters": [
					{
						"name": "callsign",
						"required": true,
						"in": "path",
						"description": "Position callsign",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return the list of antennas subjacent to an ATC position",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AntennaDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"antennas"
				]
			}
		},
		"/v2/ATCPositions/all": {
			"get": {
				"operationId": "AtcPositionsController_all",
				"parameters": [
					{
						"name": "mapType",
						"required": false,
						"in": "query",
						"description": "Region Map format",
						"schema": {
							"enum": [
								"regionMap",
								"regionMapPolygon"
							],
							"type": "string"
						}
					},
					{
						"name": "loadAirport",
						"required": false,
						"in": "query",
						"description": "Include airport info in the payload",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of ATCPositions",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ATCPositionDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"ATCPositions"
				]
			}
		},
		"/v2/ATCPositions/{callsign}": {
			"get": {
				"operationId": "AtcPositionsController_show",
				"parameters": [
					{
						"name": "callsign",
						"required": true,
						"in": "path",
						"description": "ATC Position Callsign",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a ATCPosition",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ATCPositionDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"ATCPositions"
				]
			}
		},
		"/v2/ATCPositions/{callsign}/antennas": {
			"get": {
				"operationId": "AtcPositionsController_showAntennas",
				"parameters": [
					{
						"name": "callsign",
						"required": true,
						"in": "path",
						"description": "ATC Position Callsign",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of ATC Position Antennas",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AntennaDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"ATCPositions"
				]
			}
		},
		"/v2/airports/{airportId}/ATCPositions": {
			"get": {
				"operationId": "AirportATCPositionController_index",
				"parameters": [
					{
						"name": "airportId",
						"required": true,
						"in": "path",
						"description": "Airport ICAO code",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "atcCallsign",
						"required": false,
						"in": "query",
						"description": "String to find in ATCPosition names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "position",
						"required": false,
						"in": "query",
						"description": "Position type",
						"schema": {
							"enum": [
								"APP",
								"DEP",
								"TWR",
								"GND",
								"DEL",
								"ATIS"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of ATCPositions",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/BaseATCPositionDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"ATCPositions"
				]
			}
		},
		"/v2/centers": {
			"get": {
				"operationId": "CentersController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in centers names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "region",
						"required": false,
						"in": "query",
						"description": "Region in which the center is located",
						"schema": {
							"enum": [
								"Africa",
								"Americas",
								"Asia",
								"Europe",
								"Oceania"
							],
							"type": "string"
						}
					},
					{
						"name": "countryId",
						"required": false,
						"in": "query",
						"description": "Country in which the center is located",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of centers",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedCenterDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"centers"
				]
			}
		},
		"/v2/centers/{id}": {
			"get": {
				"operationId": "CentersController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Center ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a center",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CenterDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"centers"
				]
			}
		},
		"/v2/countries": {
			"get": {
				"operationId": "CountriesController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in countries names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "region",
						"required": false,
						"in": "query",
						"description": "Region in which the country is located",
						"schema": {
							"enum": [
								"Africa",
								"Americas",
								"Asia",
								"Europe",
								"Oceania"
							],
							"type": "string"
						}
					},
					{
						"name": "divisionId",
						"required": false,
						"in": "query",
						"description": "Division in which the country is located",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of countries",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedCountryDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"countries"
				]
			}
		},
		"/v2/countries/{id}": {
			"get": {
				"operationId": "CountriesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Country ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a country",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CountryDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"countries"
				]
			}
		},
		"/v2/creators": {
			"get": {
				"operationId": "CreatorsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "tier",
						"required": false,
						"in": "query",
						"description": "Filter by tier",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "rating",
						"required": false,
						"in": "query",
						"description": "Include creator's rating in response",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "divisionId",
						"required": false,
						"in": "query",
						"description": "Division in which the creator is registered",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of creators",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedCreatorDto"
								}
							}
						}
					}
				},
				"tags": [
					"creators"
				]
			}
		},
		"/v2/creators/all": {
			"get": {
				"operationId": "CreatorsController_all",
				"parameters": [
					{
						"name": "tier",
						"required": false,
						"in": "query",
						"description": "Filter by tier",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "rating",
						"required": false,
						"in": "query",
						"description": "Include creator's rating in response",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return full list of creators",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/CreatorDto"
									}
								}
							}
						}
					}
				},
				"tags": [
					"creators"
				]
			}
		},
		"/v2/creators/{vid}": {
			"get": {
				"operationId": "CreatorsController_show",
				"parameters": [
					{
						"name": "rating",
						"required": false,
						"in": "query",
						"description": "Include creator's rating in response",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User VID or 'me'",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a Creator",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreatorDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"tags": [
					"creators"
				]
			}
		},
		"/v2/languages": {
			"get": {
				"operationId": "LanguagesController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of languages",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedLanguageDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"languages"
				]
			}
		},
		"/v2/languages/{id}": {
			"get": {
				"operationId": "LanguagesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Language ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a language",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LanguageDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"languages"
				]
			}
		},
		"/v2/navaids/{type}": {
			"get": {
				"operationId": "NavaidController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in navaids names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "region",
						"required": false,
						"in": "query",
						"description": "Region in which the navaid is located",
						"schema": {
							"enum": [
								"Africa",
								"Americas",
								"Asia",
								"Europe",
								"Oceania"
							],
							"type": "string"
						}
					},
					{
						"name": "icao",
						"required": false,
						"in": "query",
						"description": "String to find in navaids icao",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Navaid type",
						"schema": {
							"enum": [
								"VOR",
								"FIX",
								"NDB"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of centers",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedNavaidDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"navaids"
				]
			}
		},
		"/v2/navaids/{type}/{id}": {
			"get": {
				"operationId": "NavaidController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Navaid ID",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Navaid type",
						"schema": {
							"enum": [
								"VOR",
								"FIX",
								"NDB"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a navaid",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NavaidDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"navaids"
				]
			}
		},
		"/v2/centers/{id}/notams": {
			"get": {
				"operationId": "CenterNotamsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Center ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of available Notams",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedNotamDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"centers",
					"notams"
				]
			}
		},
		"/v2/centers/{id}/notams/all": {
			"get": {
				"operationId": "CenterNotamsController_all",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Center ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "mapType",
						"required": false,
						"in": "query",
						"description": "Region Map format",
						"schema": {
							"enum": [
								"regionMap",
								"regionMapPolygon"
							],
							"type": "string"
						}
					},
					{
						"name": "now",
						"required": true,
						"in": "query",
						"description": "Select the active notams at the time of the request",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of available Notams",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotamDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"centers",
					"notams"
				]
			}
		},
		"/v2/airports/{icao}/notams": {
			"get": {
				"operationId": "AirportsNotamsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airport ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of available Notams",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedNotamDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"notams"
				]
			}
		},
		"/v2/airports/{icao}/notams/all": {
			"get": {
				"operationId": "AirportsNotamsController_all",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airport ICAO",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "mapType",
						"required": false,
						"in": "query",
						"description": "Region Map format",
						"schema": {
							"enum": [
								"regionMap",
								"regionMapPolygon"
							],
							"type": "string"
						}
					},
					{
						"name": "now",
						"required": true,
						"in": "query",
						"description": "Select the active notams at the time of the request",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of available Notams",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotamDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"notams"
				]
			}
		},
		"/v2/divisions/{id}/notams": {
			"get": {
				"operationId": "DivisionsNotamsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Division ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of available Notams",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedNotamDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"divisions",
					"notams"
				]
			}
		},
		"/v2/divisions/{id}/notams/all": {
			"get": {
				"operationId": "DivisionsNotamsController_all",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Division ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "mapType",
						"required": false,
						"in": "query",
						"description": "Region Map format",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "now",
						"required": true,
						"in": "query",
						"description": "Select the active notams at the time of the request",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of available Notams",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotamDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"divisions",
					"notams"
				]
			}
		},
		"/v2/notams/all": {
			"get": {
				"operationId": "NotamsController_all",
				"parameters": [
					{
						"name": "mapType",
						"required": false,
						"in": "query",
						"description": "Region Map format",
						"schema": {
							"enum": [
								"regionMap",
								"regionMapPolygon"
							],
							"type": "string"
						}
					},
					{
						"name": "now",
						"required": true,
						"in": "query",
						"description": "Select the active notams at the time of the request",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of NOTAMs",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/NotamDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"notams"
				]
			}
		},
		"/v2/notams/{id}": {
			"get": {
				"operationId": "NotamsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "NOTAM ID",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a Notam",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotamDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"notams"
				]
			}
		},
		"/v2/positions/search": {
			"get": {
				"operationId": "PositionsController_search",
				"parameters": [
					{
						"name": "startsWith",
						"required": false,
						"in": "query",
						"description": "Filter position that match this string",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "icao",
						"required": false,
						"in": "path",
						"description": "Airport/Center ICAO code",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "positionType",
						"required": false,
						"in": "query",
						"description": "Position type",
						"schema": {
							"enum": [
								"CTR",
								"APP",
								"DEP",
								"TWR",
								"GND",
								"DEL",
								"ATIS"
							],
							"type": "string"
						}
					},
					{
						"name": "limit",
						"required": false,
						"in": "path",
						"description": "Max results of each type (default: 10, max: 100)",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "composePositionList",
						"required": false,
						"in": "path",
						"description": "Return the list of composePositions",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of matched positions (ATCPositions + Subcenters)",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PositionDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"Positions",
					"ATCPositions",
					"subcenters"
				]
			}
		},
		"/v2/airports/{icao}/runways": {
			"get": {
				"operationId": "AirportRunwaysController_index",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airport ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of Runways",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/BaseRunwayDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"runways"
				]
			}
		},
		"/v2/runways/{id}": {
			"get": {
				"operationId": "RunwaysController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Runway ID",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a Runway",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RunwayDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"runways"
				]
			}
		},
		"/v2/sectors": {
			"get": {
				"operationId": "SectorController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in sectors names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "region",
						"required": false,
						"in": "query",
						"description": "Region in which the sector is located",
						"schema": {
							"enum": [
								"Africa",
								"Americas",
								"Asia",
								"Europe",
								"Oceania"
							],
							"type": "string"
						}
					},
					{
						"name": "countryId",
						"required": false,
						"in": "query",
						"description": "Country in which the sector is located",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of sectors",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedSectorDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"sectors"
				]
			}
		},
		"/v2/sectors/all": {
			"get": {
				"operationId": "SectorController_all",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Return a paginated list of sectors",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SectorDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"sectors"
				]
			}
		},
		"/v2/sectors/{id}": {
			"get": {
				"operationId": "SectorController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Sector ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a sector",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SectorDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"sectors"
				]
			}
		},
		"/v2/sectors/{id}/files": {
			"get": {
				"operationId": "SectorsFilesController_index",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Sector ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of sector files",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SectorFileDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"sectors"
				]
			}
		},
		"/v2/sectors/{id}/files/latest": {
			"get": {
				"operationId": "SectorsFilesController_latest",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Sector ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return the latest and valid sector files",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SectorFileDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"sectors"
				]
			}
		},
		"/v2/sectors/{id}/files/latest/download": {
			"get": {
				"operationId": "SectorsFilesController_downloadLatest",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Sector ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "SectorFile"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"sectors"
				]
			}
		},
		"/v2/sectors/{sectorId}/files/{id}": {
			"get": {
				"operationId": "SectorsFilesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "SectorFile ID",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "sectorId",
						"required": true,
						"in": "path",
						"description": "Sector ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "SectorFile"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"sectors"
				]
			}
		},
		"/v2/sectors/{sectorId}/files/{id}/download": {
			"get": {
				"operationId": "SectorsFilesController_showDownload",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "SectorFile ID",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "sectorId",
						"required": true,
						"in": "path",
						"description": "Sector ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "SectorFile"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"sectors"
				]
			}
		},
		"/v2/servers": {
			"get": {
				"operationId": "ServersController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "hostname",
						"required": false,
						"in": "query",
						"description": "String to find in servers ",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get server based on their state",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of servers",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedServerDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"servers"
				]
			}
		},
		"/v2/servers/all": {
			"get": {
				"operationId": "ServersController_all",
				"parameters": [
					{
						"name": "hostname",
						"required": false,
						"in": "query",
						"description": "String to find in servers ",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get server based on their state",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of servers",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ServerDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"servers"
				]
			}
		},
		"/v2/servers/{id}": {
			"get": {
				"operationId": "ServersController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Server Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a Server",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServerDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"servers"
				]
			}
		},
		"/v2/simulators/{id}/versions": {
			"get": {
				"operationId": "SimulatorVersionSimulatorsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in simulators names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get simulator based on their state",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "version",
						"required": false,
						"in": "query",
						"description": "Simulator version",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "SimulatorId",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of simulators",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedSimulatorVersionDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"simulators",
					"simulatorVersions"
				]
			}
		},
		"/v2/simulatorVersions": {
			"get": {
				"operationId": "SimulatorVersionsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in simulators names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get simulator based on their state",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "version",
						"required": false,
						"in": "query",
						"description": "Simulator version",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of simulators",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedSimulatorVersionDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"simulatorVersions"
				]
			}
		},
		"/v2/simulatorVersions/all": {
			"get": {
				"operationId": "SimulatorVersionsController_all",
				"parameters": [
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in simulators names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get simulator based on their state",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "hasBaseModels",
						"required": false,
						"in": "query",
						"description": "Check if the simulator version has baseModels",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "version",
						"required": false,
						"in": "query",
						"description": "Simulator version",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of simulators",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SimulatorVersionDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"simulatorVersions"
				]
			}
		},
		"/v2/simulatorVersions/{id}": {
			"get": {
				"operationId": "SimulatorVersionsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "BaseModel ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a BaseModel",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SimulatorVersionDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"simulatorVersions"
				]
			}
		},
		"/v2/simulators": {
			"get": {
				"operationId": "SimulatorsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in simulators names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get simulator based on their state",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of simulators",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedSimulatorDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"simulators"
				]
			}
		},
		"/v2/simulators/all": {
			"get": {
				"operationId": "SimulatorsController_all",
				"parameters": [
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in simulators names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get simulator based on their state",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of simulators",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SimulatorDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"simulators"
				]
			}
		},
		"/v2/simulators/{id}": {
			"get": {
				"operationId": "SimulatorsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Simulator Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a Simulator",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SimulatorDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"simulators"
				]
			}
		},
		"/v2/softwares/{type}": {
			"get": {
				"operationId": "SoftwaresController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "name",
						"required": false,
						"in": "query",
						"description": "String to find in softwares names",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Software type",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of paginated softwares",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedSoftwareDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"softwares"
				]
			}
		},
		"/v2/softwares/{type}/{id}": {
			"get": {
				"operationId": "SoftwaresController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Software ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Software type",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a sector",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SoftwareDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"softwares"
				]
			}
		},
		"/v2/softwares/{type}/{id}/files": {
			"get": {
				"operationId": "SoftwaresFilesController_index",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Software ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Software type",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of software files",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SoftwareFileDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"softwares"
				]
			}
		},
		"/v2/softwares/{type}/{id}/files/latest": {
			"get": {
				"operationId": "SoftwaresFilesController_latest",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Software ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Software type",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return the latest and valid software files",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SoftwareFileDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"softwares"
				]
			}
		},
		"/v2/softwares/{type}/{id}/files/latest/download": {
			"get": {
				"operationId": "SoftwaresFilesController_downloadLatest",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Software ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Software type",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "SoftwareFile"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"softwares"
				]
			}
		},
		"/v2/softwares/{type}/{softwareId}/files/{id}": {
			"get": {
				"operationId": "SoftwaresFilesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "SoftwareFile ID",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "softwareId",
						"required": true,
						"in": "path",
						"description": "Software ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Software type",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "SoftwareFile"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"softwares"
				]
			}
		},
		"/v2/softwares/{type}/{softwareId}/files/{id}/download": {
			"get": {
				"operationId": "SoftwaresFilesController_showDownload",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "SoftwareFile ID",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "softwareId",
						"required": true,
						"in": "path",
						"description": "Software ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Software type",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "SoftwareFile"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"softwares"
				]
			}
		},
		"/v2/softwareFiles": {
			"get": {
				"operationId": "SoftwaresFilesKeysController_index",
				"parameters": [
					{
						"name": "type",
						"required": true,
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "operatingSystem",
						"required": true,
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "version",
						"required": true,
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "versionSuffix",
						"required": true,
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "fsdName",
						"required": true,
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of software files",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SoftwareFileDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"softwares",
					"softwareFiles"
				]
			}
		},
		"/v2/centers/{id}/specialAreas": {
			"get": {
				"operationId": "CenterSpecialAreasController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Center ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of available special areas",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedSpecialAreasDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"centers",
					"specialAreas"
				]
			}
		},
		"/v2/centers/{id}/specialAreas/all": {
			"get": {
				"operationId": "CenterSpecialAreasController_all",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Center ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "mapType",
						"required": false,
						"in": "query",
						"description": "Region Map format",
						"schema": {
							"enum": [
								"regionMap",
								"regionMapPolygon"
							],
							"type": "string"
						}
					},
					{
						"name": "now",
						"required": true,
						"in": "query",
						"description": "Select the active notams at the time of the request",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of available special areas",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SpecialAreasDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"centers",
					"specialAreas"
				]
			}
		},
		"/v2/specialAreas/all": {
			"get": {
				"operationId": "SpecialAreasController_all",
				"parameters": [
					{
						"name": "mapType",
						"required": false,
						"in": "query",
						"description": "Region Map format",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "now",
						"required": true,
						"in": "query",
						"description": "Select the active special areas at the time of the request",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of special areas",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SpecialAreasDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"specialAreas"
				]
			}
		},
		"/v2/specialAreas/{id}": {
			"get": {
				"operationId": "SpecialAreasController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "NOTAM ID",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a special area",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SpecialAreasDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"specialAreas"
				]
			}
		},
		"/v2/centers/{id}/squawks": {
			"get": {
				"operationId": "CenterSquawksController_index",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Center ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return the list of available Squawks",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SquawkDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"centers",
					"squawks"
				]
			}
		},
		"/v2/centers/{id}/squawks/generate": {
			"post": {
				"operationId": "CenterSquawksController_generate",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Center ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SquawkRequestDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Return a squawk number",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SquawkGeneratedDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"centers",
					"squawks"
				]
			}
		},
		"/v2/airports/{icao}/squawks": {
			"get": {
				"operationId": "AirportsSquawksController_index",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airport ICAO Code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return the list of available Squawks",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SquawkDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"squawks"
				]
			}
		},
		"/v2/airports/{icao}/squawks/generate": {
			"post": {
				"operationId": "AirportsSquawksController_generate",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airport ICAO Code",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SquawkRequestDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Return a squawk number",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SquawkGeneratedDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"squawks"
				]
			}
		},
		"/v2/squawks/{id}": {
			"get": {
				"operationId": "SquawksController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Squawk ID",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a Squawk",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SquawkDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"squawks"
				]
			}
		},
		"/v2/centers/{id}/subcenters": {
			"get": {
				"operationId": "CenterSubcenterController_index",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Center Id",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "atcCallsign",
						"required": false,
						"in": "query",
						"description": "String to find in subcenters names",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of Subcenter",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/BaseSubcenterInterfaces"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"centers",
					"subcenters"
				]
			}
		},
		"/v2/subcenters/all": {
			"get": {
				"operationId": "SubcentersController_all",
				"parameters": [
					{
						"name": "mapType",
						"required": false,
						"in": "query",
						"description": "Region Map format",
						"schema": {
							"enum": [
								"regionMap",
								"regionMapPolygon"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of Subcenter",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseSubcenterInterfaces"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"subcenters"
				]
			}
		},
		"/v2/subcenters/{id}": {
			"get": {
				"operationId": "SubcentersController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Subcenter ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a Subcenter",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseSubcenterInterfaces"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"subcenters"
				]
			}
		},
		"/v2/subcenters/{id}/antennas": {
			"get": {
				"operationId": "SubcentersController_showAntennas",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Subcenter ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of Subcenter Antennas",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AntennaDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"subcenters"
				]
			}
		},
		"/v2/airlines/{icao}/virtualAirlines": {
			"get": {
				"operationId": "AirlineVirtualAirlineController_index",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airline ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of virtual airlines",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/BaseVirtualAirlineDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airlines",
					"virtualAirlines"
				]
			}
		},
		"/v2/virtualAirlines": {
			"get": {
				"operationId": "VirtualAirlinesController_paginated",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of virtual airlines",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MixedVirtualAirlineDTO"
									}
								}
							}
						}
					}
				},
				"tags": [
					"virtualAirlines"
				]
			}
		},
		"/v2/virtualAirlines/all": {
			"get": {
				"operationId": "VirtualAirlinesController_all",
				"parameters": [
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of all virtual airlines",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MixedVirtualAirlineDTO"
									}
								}
							}
						}
					}
				},
				"tags": [
					"virtualAirlines"
				]
			}
		},
		"/v2/virtualAirlines/{id}": {
			"get": {
				"operationId": "VirtualAirlinesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airline ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a Virtual airline",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VirtualAirlineDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"tags": [
					"virtualAirlines"
				]
			}
		},
		"/v2/virtualAirlines/{id}/mainLogo": {
			"get": {
				"operationId": "VirtualAirlinesController_mainLogo",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Virtual airline IdCode",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a virtual airline logo"
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"tags": [
					"virtualAirlines"
				]
			}
		},
		"/v2/virtualAirlines/{id}/onlineLogo": {
			"get": {
				"operationId": "VirtualAirlinesController_onlineLogo",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Virtual airline IdCode",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a virtual airline logo"
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"tags": [
					"virtualAirlines"
				]
			}
		},
		"/v2/airports/all/metar": {
			"get": {
				"operationId": "WeatherController_allMetars",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Return airports Metar",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/MetarDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"weather"
				]
			}
		},
		"/v2/airports/{icao}/metar": {
			"get": {
				"operationId": "WeatherController_metar",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return airport Metar",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetarDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"weather"
				]
			}
		},
		"/v2/airports/all/shortTaf": {
			"get": {
				"operationId": "WeatherController_allShortTaf",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Return airports ShortTaf",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ShortTafDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"weather"
				]
			}
		},
		"/v2/airports/{icao}/shortTaf": {
			"get": {
				"operationId": "WeatherController_shortTaf",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airport ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return airport ShortTaf",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ShortTafDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"weather"
				]
			}
		},
		"/v2/airports/all/taf": {
			"get": {
				"operationId": "WeatherController_allTaf",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Return airports Taf",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/TafDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"weather"
				]
			}
		},
		"/v2/airports/{icao}/taf": {
			"get": {
				"operationId": "WeatherController_taf",
				"parameters": [
					{
						"name": "icao",
						"required": true,
						"in": "path",
						"description": "Airport ICAO code",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return airport Taf",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TafDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"airports",
					"weather"
				]
			}
		},
		"/v2/motds/latest": {
			"get": {
				"operationId": "MotdsController_latest",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Return a motd",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MotdDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"tags": [
					"motds"
				]
			}
		},
		"/v2/routes": {
			"get": {
				"operationId": "RoutesController_list",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "departureId",
						"required": false,
						"in": "query",
						"description": "Filter by departure airport, prefix match allowed (2 letters min)",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "arrivalId",
						"required": false,
						"in": "query",
						"description": "Filter by arrival airport, prefix match allowed (2 letters min)",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "divisionId",
						"required": false,
						"in": "query",
						"description": "Filter by division",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return filtered paginated routes",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedRoutesDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"routes"
				]
			}
		},
	
		"/v2/departments": {
			"get": {
				"operationId": "DepartmentsController_list",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retuns paginated list of all staff departments",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedDepartmentResponseDto"
								}
							}
						}
					}
				},
				"tags": [
					"departments"
				]
			}
		},
		"/v2/departments/{id}": {
			"get": {
				"operationId": "DepartmentsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Department Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Department Details",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DepartmentResponseDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"tags": [
					"departments"
				]
			}
		},
		"/v2/departmentTeams": {
			"get": {
				"operationId": "DepartmentTeamsController_list",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "departmentId",
						"required": false,
						"in": "query",
						"description": "ID of the department",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retuns paginated list of all staff department teams",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedDepartmentTeamResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"departmentTeams"
				]
			}
		},
		"/v2/departmentTeams/{id}": {
			"get": {
				"operationId": "DepartmentTeamsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Department Team Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Department Team Details",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DepartmentTeamResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"departmentTeams"
				]
			}
		},
		"/v2/divisions": {
			"get": {
				"operationId": "DivisionsController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of divisions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedDivisionDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"divisions"
				]
			}
		},
		"/v2/divisions/all": {
			"get": {
				"operationId": "DivisionsController_all",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Return all divisions",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/DivisionDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"divisions"
				]
			}
		},
		"/v2/divisions/{id}": {
			"get": {
				"operationId": "DivisionsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Division ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a division",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DivisionDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"divisions"
				]
			}
		},
		"/v2/divisions/{id}/svgLogo": {
			"get": {
				"operationId": "DivisionsController_svgLogo",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Division ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Division Logo"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"divisions"
				]
			}
		},
		"/v2/divisions/{id}/aiaLogo": {
			"get": {
				"operationId": "DivisionsController_aiaLogo",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Division ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Division Logo"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"divisions"
				]
			}
		},
		"/v2/divisions/{id}/users": {
			"get": {
				"operationId": "DivisionUsersController_divisionUsers",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"default": 500,
							"maximum": 2000
						}
					},
					{
						"name": "networkRating",
						"required": false,
						"in": "query",
						"description": "Filter by network rating.",
						"schema": {
							"enum": [
								"inactive",
								"active",
								"memorial"
							],
							"type": "string"
						}
					},
					{
						"name": "includeHours",
						"required": false,
						"in": "query",
						"description": "When this is set to true, the response will contain the user's hours.",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "includeRatings",
						"required": false,
						"in": "query",
						"description": "When this is set to true, the response will contain the user's ratings.",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return user information for divisions. You are only able to access users in your divisions.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedUserStatisticsDto"
								}
							}
						}
					},
					"401": {
						"description": "You do not have access to this endpoint (e.g. not a division/HQ application or `id` provided doesn't match your division)."
					},
					"404": {
						"description": "Division does not exist."
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"users",
					"divisions"
				]
			}
		},
		"/v2/divisions/{id}/gca-holders": {
			"get": {
				"operationId": "DivisionUsersController_getGcaHolders",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns all GCA holders on a given division",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/DivisionGCAHoldersDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"users",
					"divisions"
				]
			}
		},
		"/v2/fras": {
			"get": {
				"operationId": "FrasController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "countryId",
						"required": false,
						"in": "query",
						"description": "Country in which the fra is located",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "divisionId",
						"required": false,
						"in": "query",
						"description": "Division in which the fra is located",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "startsWith",
						"required": false,
						"in": "query",
						"description": "Select positions that starts with a specific string (Supersedes countryId and divisionId)",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get fras on their state",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "members",
						"required": false,
						"in": "query",
						"description": "Get fras for members",
						"schema": {
							"default": true
						}
					},
					{
						"name": "positions",
						"required": false,
						"in": "query",
						"description": "Get fras for control",
						"schema": {
							"default": true
						}
					},
					{
						"name": "expand",
						"required": false,
						"in": "query",
						"description": "Expand relationships",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of fras",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedFraExtendedDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"fras"
				]
			}
		},
		"/v2/fras/{id}": {
			"get": {
				"operationId": "FrasController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "FraId",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return an Fra",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FraExtendedDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"fras"
				]
			}
		},
		"/v2/ATCPositions/{id}/fras": {
			"get": {
				"operationId": "AtcPositionFrasController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get fras on their state",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "members",
						"required": false,
						"in": "query",
						"description": "Get fras for members",
						"schema": {
							"default": true
						}
					},
					{
						"name": "positions",
						"required": false,
						"in": "query",
						"description": "Get fras for control",
						"schema": {
							"default": true
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of fras",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedFraDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"fras",
					"ATCPositions"
				]
			}
		},
		"/v2/subcenters/{id}/fras": {
			"get": {
				"operationId": "SubcenterFrasController_index",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "isActive",
						"required": false,
						"in": "query",
						"description": "Get fras on their state",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "members",
						"required": false,
						"in": "query",
						"description": "Get fras for members",
						"schema": {
							"default": true
						}
					},
					{
						"name": "positions",
						"required": false,
						"in": "query",
						"description": "Get fras for control",
						"schema": {
							"default": true
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of fras",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedFraDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"fras",
					"subcenters"
				]
			}
		},
		"/v2/fras/check/{callsign}/{vid}": {
			"get": {
				"operationId": "CheckFrasController_getATCFra",
				"parameters": [
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "callsign",
						"required": true,
						"in": "path",
						"description": "Position's full callsign",
						"schema": {
							"example": "LFBD_APP",
							"type": "string"
						}
					},
					{
						"name": "startDate",
						"required": false,
						"in": "query",
						"description": "Datetime to check the FRA validity for",
						"schema": {
							"format": "date-time",
							"example": "2023-08-07T09:00:00.000Z",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User is allowed to connect to that position",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AllowedFraCheckDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "User isn't allowed to connect to that position",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorFraCheckDTO"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"fras"
				]
			}
		},
		"/v2/fras/check/expired-sessions": {
			"get": {
				"operationId": "CheckFrasController_listOverstayedATCs",
				"parameters": [],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"fras"
				]
			}
		},
		"/v2/permissions/{id}/users": {
			"get": {
				"operationId": "UserPermissionInstancesController_listUsers",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"userPermissions",
					"users"
				]
			},
			"post": {
				"operationId": "UserPermissionInstancesController_create",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"userPermissions",
					"users"
				]
			}
		},
		"/v2/permissions/{permissionId}/users/{id}": {
			"get": {
				"operationId": "UserPermissionInstancesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"userPermissions",
					"users"
				]
			},
			"put": {
				"operationId": "UserPermissionInstancesController_update",
				"parameters": [
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"userPermissions",
					"users"
				]
			},
			"delete": {
				"operationId": "UserPermissionInstancesController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"userPermissions",
					"users"
				]
			}
		},
		"/v2/users/{vid}/permissions": {
			"get": {
				"operationId": "UserPermissionInstancesController_listForUsers",
				"parameters": [
					{
						"name": "vid",
						"required": true,
						"in": "query",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"userPermissions",
					"users"
				]
			}
		},
		"/v2/users/{vid}/permissions/all": {
			"get": {
				"operationId": "UserPermissionInstancesController_listForMeAll",
				"parameters": [
					{
						"name": "refetch",
						"required": false,
						"in": "query",
						"description": "Fetch permissions from the database instead of the token",
						"schema": {
							"default": false
						}
					},
					{
						"name": "applicationId",
						"required": false,
						"in": "query",
						"description": "Specify the application ID to fetch permissions from",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "vid",
						"required": true,
						"in": "query",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"userPermissions",
					"users"
				]
			}
		},
		"/v2/permissions/{id}/userStaffPositions": {
			"get": {
				"operationId": "UserStaffPositionPermissionInstancesController_listUsers",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"userStaffPositionPermissions",
					"userStaffPositions"
				]
			},
			"post": {
				"operationId": "UserStaffPositionPermissionInstancesController_create",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserStaffPositionPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"userStaffPositionPermissions",
					"userStaffPositions"
				]
			}
		},
		"/v2/permissions/{permissionId}/userStaffPositions/{id}": {
			"get": {
				"operationId": "UserStaffPositionPermissionInstancesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"userStaffPositionPermissions",
					"userStaffPositions"
				]
			},
			"put": {
				"operationId": "UserStaffPositionPermissionInstancesController_update",
				"parameters": [
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserStaffPositionPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"userStaffPositionPermissions",
					"userStaffPositions"
				]
			},
			"delete": {
				"operationId": "UserStaffPositionPermissionInstancesController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"userStaffPositionPermissions",
					"userStaffPositions"
				]
			}
		},
		"/v2/userStaffPositions/{id}/permissions": {
			"get": {
				"operationId": "UserStaffPositionPermissionInstancesController_listForUsers",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "User Staff Position Id",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"userStaffPositionPermissions",
					"userStaffPositions"
				]
			}
		},
		"/v2/permissions/{id}/staffPositions": {
			"get": {
				"operationId": "StaffPositionPermissionInstancesController_lists",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"staffPositionPermissions",
					"staffPositions"
				]
			},
			"post": {
				"operationId": "StaffPositionPermissionInstancesController_create",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/StaffPositionPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"staffPositionPermissions",
					"staffPositions"
				]
			}
		},
		"/v2/permissions/{permissionId}/staffPositions/{id}": {
			"get": {
				"operationId": "StaffPositionPermissionInstancesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"staffPositionPermissions",
					"staffPositions"
				]
			},
			"put": {
				"operationId": "StaffPositionPermissionInstancesController_update",
				"parameters": [
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/StaffPositionPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"staffPositionPermissions",
					"staffPositions"
				]
			},
			"delete": {
				"operationId": "StaffPositionPermissionInstancesController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"staffPositionPermissions",
					"staffPositions"
				]
			}
		},
		"/v2/staffPositions/{id}/permissions": {
			"get": {
				"operationId": "StaffPositionPermissionInstancesController_listFors",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Staff Position Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"staffPositionPermissions",
					"staffPositions"
				]
			}
		},
		"/v2/permissions/{id}/departmentTeams": {
			"get": {
				"operationId": "DepartmentTeamPermissionInstancesController_lists",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"departmentTeamPermissions",
					"departmentTeams"
				]
			},
			"post": {
				"operationId": "DepartmentTeamPermissionInstancesController_create",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DepartmentTeamPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"departmentTeamPermissions",
					"departmentTeams"
				]
			}
		},
		"/v2/permissions/{permissionId}/departmentTeams/{id}": {
			"get": {
				"operationId": "DepartmentTeamPermissionInstancesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"departmentTeamPermissions",
					"departmentTeams"
				]
			},
			"put": {
				"operationId": "DepartmentTeamPermissionInstancesController_update",
				"parameters": [
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DepartmentTeamPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"departmentTeamPermissions",
					"departmentTeams"
				]
			},
			"delete": {
				"operationId": "DepartmentTeamPermissionInstancesController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"departmentTeamPermissions",
					"departmentTeams"
				]
			}
		},
		"/v2/departmentTeams/{id}/permissions": {
			"get": {
				"operationId": "DepartmentTeamPermissionInstancesController_listFors",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Department Team Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"departmentTeamPermissions",
					"departmentTeams"
				]
			}
		},
		"/v2/permissions/{id}/departments": {
			"get": {
				"operationId": "DepartmentPermissionInstancesController_lists",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"staffPermissions",
					"departments"
				]
			},
			"post": {
				"operationId": "DepartmentPermissionInstancesController_create",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DepartmentPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"staffPermissions",
					"departments"
				]
			}
		},
		"/v2/permissions/{permissionId}/departments/{id}": {
			"get": {
				"operationId": "DepartmentPermissionInstancesController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"staffPermissions",
					"departments"
				]
			},
			"put": {
				"operationId": "DepartmentPermissionInstancesController_update",
				"parameters": [
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DepartmentPermissionInstanceRequestDto"
							}
						}
					}
				},
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"staffPermissions",
					"departments"
				]
			},
			"delete": {
				"operationId": "DepartmentPermissionInstancesController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Permission Instance Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "permissionId",
						"required": true,
						"in": "path",
						"description": "Permission Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					}
				],
				"tags": [
					"permissions",
					"staffPermissions",
					"departments"
				]
			}
		},
		"/v2/departments/{id}/permissions": {
			"get": {
				"operationId": "DepartmentPermissionInstancesController_listFors",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Department Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": ""
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions",
					"staffPermissions",
					"departments"
				]
			}
		},
		"/v2/permissions": {
			"get": {
				"operationId": "PermissionsController_list",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Return IVAO permissions list",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PermissionDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions"
				]
			}
		},
		"/v2/permissions/{id}": {
			"get": {
				"operationId": "PermissionsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return IVAO permissions list",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PermissionDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"permissions"
				]
			}
		},
		"/v2/users/me/settings": {
			"get": {
				"operationId": "SettingsController_list",
				"parameters": [
					{
						"name": "default",
						"required": true,
						"in": "query",
						"description": "Include default settings when you are requesting other app settings",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Yours settings as key -> value object",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"configuration"
						]
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"settings"
				]
			},
			"put": {
				"operationId": "SettingsController_update",
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SettingRequestDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "New settings value",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SettingRequestDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"configuration"
						]
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"settings"
				]
			}
		},
		"/v2/users/me/settings/{type}": {
			"get": {
				"operationId": "SettingsController_listType",
				"parameters": [
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Application id",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "default",
						"required": true,
						"in": "query",
						"description": "Include default settings when you are requesting other app settings",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Yours settings as key -> value object",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"configuration"
						]
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"settings"
				]
			},
			"put": {
				"operationId": "SettingsController_updateType",
				"parameters": [
					{
						"name": "type",
						"required": true,
						"in": "path",
						"description": "Application id",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SettingRequestDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "New settings value",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SettingRequestDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"configuration"
						]
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"settings"
				]
			}
		},
		"/v2/users/me/settings/{type}/{key}": {
			"delete": {
				"operationId": "SettingsController_delete",
				"parameters": [
					{
						"name": "type",
						"required": false,
						"in": "path",
						"description": "Application id",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "key",
						"required": true,
						"in": "path",
						"description": "The setting key to be deleted",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"configuration"
						]
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"settings"
				]
			}
		},
		"/v2/staffPositions": {
			"get": {
				"operationId": "StaffPositionsController_list",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "departmentId",
						"required": false,
						"in": "query",
						"description": "ID of the department",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "departmentTeamId",
						"required": false,
						"in": "query",
						"description": "ID of the department team",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"required": false,
						"in": "query",
						"description": "Staff Position Type",
						"schema": {
							"enum": [
								"HQ",
								"DIV"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retuns paginated list of all staff positions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedStaffPositionResponseDto"
								}
							}
						}
					}
				},
				"tags": [
					"staffPositions"
				]
			}
		},
		"/v2/staffPositions/{id}": {
			"get": {
				"operationId": "StaffPositionsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Staff Position Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Staff Position Details",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StaffPositionResponseDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"tags": [
					"staffPositions"
				]
			}
		},
		"/v2/userStaffPositions": {
			"get": {
				"operationId": "UserStaffPositionsController_list",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "isVacant",
						"required": false,
						"in": "query",
						"description": "Is staff position vacant?",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "userId",
						"required": false,
						"in": "query",
						"description": "Staff's VID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "centerId",
						"required": false,
						"in": "query",
						"description": "ID of the staff position's Center",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "divisionId",
						"required": false,
						"in": "query",
						"description": "ID of the staff position's Division",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "departmentId",
						"required": false,
						"in": "query",
						"description": "ID of the department",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "departmentTeamId",
						"required": false,
						"in": "query",
						"description": "ID of the department team",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "staffPositionId",
						"required": false,
						"in": "query",
						"description": "ID of the staff position",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retuns paginated list of all user staff positions",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedUserStaffPositionResponseDto"
								}
							}
						}
					}
				},
				"tags": [
					"userStaffPositions"
				]
			}
		},
		"/v2/userStaffPositions/{id}": {
			"get": {
				"operationId": "UserStaffPositionsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Staff Position Id",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Staff Position Details",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserStaffPositionResponseDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"tags": [
					"userStaffPositions"
				]
			}
		},
		"/v2/users/{vid}/userStaffPositions": {
			"get": {
				"operationId": "UserStaffPositionsUserController_list",
				"parameters": [
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retuns list of user's staff positions",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UserStaffPositionResponseDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"profile"
						]
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"userStaffPositions",
					"users"
				]
			}
		},
		"/v2/users/{vid}": {
			"get": {
				"operationId": "UsersController_show",
				"parameters": [
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return your user information. Some fields could change depending on the token",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"users"
				]
			}
		},
		"/v2/users/staffs": {
			"get": {
				"operationId": "UsersController_staffList",
				"parameters": [
					{
						"name": "isSupervisor",
						"required": false,
						"in": "query",
						"description": "Returns all network supervisors",
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a list of users holding a staff position",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UserStaffDto"
									}
								}
							}
						}
					},
					"401": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"profile"
						]
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"users"
				]
			}
		},
		"/v2/users/staff": {
			"get": {
				"operationId": "UsersController_staffSearch",
				"parameters": [
					{
						"name": "staffEmail",
						"required": true,
						"in": "query",
						"description": "Search by staff email (@ivao.aero)",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a staff member",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDto"
								}
							}
						}
					},
					"401": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"consumer": []
					}
				],
				"tags": [
					"users"
				]
			}
		},
	
		"/v2/users/me/aircrafts": {
			"get": {
				"operationId": "AircraftsController_list",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "aircraftId",
						"required": false,
						"in": "path",
						"description": "Type of aircraft (A321, CRJ9, B787)",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "registration",
						"required": false,
						"in": "path",
						"description": "Aircraft's registration",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "selcal",
						"required": false,
						"in": "path",
						"description": "Aircraft's selcal",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns a paginated list of aircraft created by the authenticated user",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedUserAircraftDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:read"
						]
					}
				],
				"tags": [
					"aircrafts"
				]
			},
			"post": {
				"operationId": "AircraftsController_create",
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AircraftRequestDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the created instance of Aircraft",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseUserAircraftDto"
								}
							}
						}
					},
					"400": {
						"description": "BadRequest",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:write"
						]
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/users/me/aircrafts/{id}": {
			"get": {
				"operationId": "AircraftsController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "Aircraft Hangar Id",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns an instance of UserAircraftDto",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserAircraftDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:read"
						]
					}
				],
				"tags": [
					"aircrafts"
				]
			},
			"put": {
				"operationId": "AircraftsController_update",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "FlightPlan Id",
						"schema": {
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AircraftRequestDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Return a flightPlan",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseUserAircraftDto"
								}
							}
						}
					},
					"400": {
						"description": "BadRequest",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:write"
						]
					}
				],
				"tags": [
					"aircrafts"
				]
			},
			"delete": {
				"operationId": "AircraftsController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"schema": {
							"type": "number"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:write"
						]
					}
				],
				"tags": [
					"aircrafts"
				]
			}
		},
		"/v2/users/{vid}/flightPlans": {
			"get": {
				"operationId": "FlightPlansController_list",
				"parameters": [
					{
						"name": "page",
						"required": false,
						"in": "query",
						"description": "The number of the page",
						"schema": {
							"default": 1,
							"type": "number"
						}
					},
					{
						"name": "perPage",
						"required": false,
						"in": "query",
						"description": "The number of elements per page",
						"schema": {
							"maximum": 100
						}
					},
					{
						"name": "arrivalId",
						"required": false,
						"in": "query",
						"description": "Arrival airport icao",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "departureId",
						"required": false,
						"in": "query",
						"description": "Departure airport icao",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "aircraftId",
						"required": false,
						"in": "query",
						"description": "Aircraft icao code",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "callsign",
						"required": false,
						"in": "query",
						"description": "FlightPlan callsign",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isArchived",
						"required": false,
						"in": "query",
						"description": "Check if the flightPlans is archived",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a paginated list of flightPlans",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginatedFlightPlanDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:read"
						]
					}
				],
				"tags": [
					"flightPlans"
				]
			},
			"post": {
				"operationId": "FlightPlansController_create",
				"parameters": [
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateFlightPlanDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Return a flightPlan",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlightPlanShowDto"
								}
							}
						}
					},
					"400": {
						"description": "BadRequest",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:write"
						]
					}
				],
				"tags": [
					"flightPlans"
				]
			}
		},
		"/v2/users/{vid}/flightPlans/active": {
			"get": {
				"operationId": "FlightPlansController_active",
				"parameters": [
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return the current active flightPlan for a user",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlightPlanShowDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:read"
						]
					}
				],
				"tags": [
					"flightPlans"
				]
			}
		},
		"/v2/users/{vid}/flightPlans/{id}": {
			"get": {
				"operationId": "FlightPlansController_show",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "FlightPlan Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a flightPlan",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlightPlanShowDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:read"
						]
					}
				],
				"tags": [
					"flightPlans"
				]
			},
			"put": {
				"operationId": "FlightPlansController_update",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "FlightPlan Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateFlightPlanDto"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Return a flightPlan",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlightPlanShowDto"
								}
							}
						}
					},
					"400": {
						"description": "BadRequest",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:write"
						]
					}
				],
				"tags": [
					"flightPlans"
				]
			},
			"delete": {
				"operationId": "FlightPlansController_delete",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"responses": {
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:write"
						]
					}
				],
				"tags": [
					"flightPlans"
				]
			}
		},
		"/v2/users/{vid}/flightPlans/{id}/archive": {
			"put": {
				"operationId": "FlightPlansController_archive",
				"parameters": [
					{
						"name": "id",
						"required": true,
						"in": "path",
						"description": "FlightPlan Id",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "vid",
						"required": true,
						"in": "path",
						"description": "User's VID (use 'me' for current logged in user)",
						"schema": {
							"default": "me",
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Return a flightPlan",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FlightPlanShowDto"
								}
							}
						}
					},
					"400": {
						"description": "BadRequest",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					},
					"404": {
						"description": "NotFound",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SwaggerResponsesDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"oauth2": []
					},
					{
						"consumer": []
					},
					{
						"oauth2": []
					},
					{
						"oauth2": [
							"flight_plans:write"
						]
					}
				],
				"tags": [
					"flightPlans"
				]
			}
		}
	},
	"info": {
		"title": "IVAO API",
		"description": "All endpoints related to ivao",
		"version": "1.0",
		"contact": {
			"name": "IVAO Web Services",
			"url": "https://wiki.ivao.aero/en/home/devops/api/documentation-v2",
			"email": "web@ivao.aero"
		}
	},
	"tags": [],
	"servers": [],
	"components": {
		"securitySchemes": {
			"oauth2": {
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"type": "openIdConnect",
				"openIdConnectUrl": "https://api.ivao.aero/.well-known/openid-configuration"
			},
			"consumer": {
				"type": "apiKey",
				"scheme": "https",
				"in": "header",
				"name": "apiKey"
			}
		},
		"schemas": {
			"AircraftManufactureDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"AircraftsEquipmentDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"order": {
						"type": "number"
					},
					"active": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"name",
					"order",
					"active"
				]
			},
			"AircraftTransponderTypeDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"order": {
						"type": "number"
					},
					"type": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"name",
					"order",
					"type"
				]
			},
			"BaseAircraftDto": {
				"type": "object",
				"properties": {
					"icao": {
						"type": "string"
					},
					"iata": {
						"type": "string"
					},
					"model": {
						"type": "string"
					},
					"manufactureId": {
						"type": "number"
					},
					"manufacture": {
						"$ref": "#/components/schemas/AircraftManufactureDto"
					}
				},
				"required": [
					"icao",
					"iata",
					"model",
					"manufactureId",
					"manufacture"
				]
			},
			"PaginatedAircraftDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseAircraftDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"AircraftDto": {
				"type": "object",
				"properties": {
					"icao": {
						"type": "string"
					},
					"iata": {
						"type": "string"
					},
					"model": {
						"type": "string"
					},
					"manufactureId": {
						"type": "number"
					},
					"manufacture": {
						"$ref": "#/components/schemas/AircraftManufactureDto"
					},
					"description": {
						"type": "string"
					},
					"wakeTurbulence": {
						"type": "string"
					},
					"engineId": {
						"type": "number"
					},
					"numberEngines": {
						"type": "number"
					},
					"military": {
						"type": "boolean"
					}
				},
				"required": [
					"icao",
					"iata",
					"model",
					"manufactureId",
					"manufacture",
					"description",
					"wakeTurbulence",
					"engineId",
					"numberEngines",
					"military"
				]
			},
			"AircraftVariantDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"aircraftId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"fullId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"aircraftId",
					"name",
					"fullId"
				]
			},
			"BaseAirlineDto": {
				"type": "object",
				"properties": {
					"icao": {
						"type": "string"
					},
					"iata": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"mainLogo": {
						"type": "string"
					},
					"realBased": {
						"type": "boolean"
					}
				},
				"required": [
					"icao",
					"iata",
					"name",
					"mainLogo",
					"realBased"
				]
			},
			"PaginatedAirlineDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseAirlineDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"AirlineDto": {
				"type": "object",
				"properties": {
					"icao": {
						"type": "string"
					},
					"iata": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"mainLogo": {
						"type": "string"
					},
					"realBased": {
						"type": "boolean"
					},
					"countryId": {
						"type": "string"
					},
					"callsign": {
						"type": "string"
					},
					"website": {
						"type": "string"
					}
				},
				"required": [
					"icao",
					"iata",
					"name",
					"mainLogo",
					"realBased",
					"countryId",
					"callsign",
					"website"
				]
			},
			"RouteDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"departureId": {
						"type": "string"
					},
					"arrivalId": {
						"type": "string"
					},
					"flightType": {
						"type": "string"
					},
					"altitudeType": {
						"type": "string"
					},
					"minimumAlt": {
						"type": "number"
					},
					"maximumAlt": {
						"type": "number"
					},
					"route": {
						"type": "string"
					},
					"comments": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"departureId",
					"arrivalId",
					"flightType",
					"altitudeType",
					"minimumAlt",
					"maximumAlt",
					"route",
					"comments"
				]
			},
			"BaseAirportDto": {
				"type": "object",
				"properties": {
					"icao": {
						"type": "string"
					},
					"iata": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"countryId": {
						"type": "string"
					},
					"latitude": {
						"type": "number"
					},
					"longitude": {
						"type": "number"
					},
					"military": {
						"type": "boolean"
					},
					"runways": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"icao",
					"iata",
					"name",
					"city",
					"countryId",
					"latitude",
					"longitude",
					"military",
					"runways"
				]
			},
			"PaginatedAirportDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseAirportDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"CountryDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"region": {
						"type": "string"
					},
					"divisionId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"region",
					"divisionId"
				]
			},
			"AirportDto": {
				"type": "object",
				"properties": {
					"icao": {
						"type": "string"
					},
					"iata": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"countryId": {
						"type": "string"
					},
					"latitude": {
						"type": "number"
					},
					"longitude": {
						"type": "number"
					},
					"military": {
						"type": "boolean"
					},
					"runways": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"faaCode": {
						"type": "string"
					},
					"atcCallsign": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"centerId": {
						"type": "string"
					},
					"firId": {
						"type": "string"
					},
					"elevation": {
						"type": "number"
					},
					"magnetic": {
						"type": "string"
					},
					"transitionAltitude": {
						"type": "number"
					},
					"web": {
						"type": "string"
					},
					"country": {
						"$ref": "#/components/schemas/CountryDto"
					}
				},
				"required": [
					"icao",
					"iata",
					"name",
					"city",
					"countryId",
					"latitude",
					"longitude",
					"military",
					"runways",
					"faaCode",
					"atcCallsign",
					"state",
					"centerId",
					"firId",
					"elevation",
					"magnetic",
					"transitionAltitude",
					"web",
					"country"
				]
			},
			"AntennaDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"location": {
						"type": "string"
					},
					"lat": {
						"type": "number"
					},
					"lng": {
						"type": "number"
					},
					"elevation": {
						"type": "number"
					},
					"transmittingPower": {
						"type": "number"
					},
					"ppm": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"name",
					"location",
					"lat",
					"lng",
					"elevation",
					"transmittingPower",
					"ppm"
				]
			},
			"BaseRegionMapDto": {
				"type": "object",
				"properties": {
					"lat": {
						"type": "number"
					},
					"lng": {
						"type": "number"
					}
				},
				"required": [
					"lat",
					"lng"
				]
			},
			"BaseATCPositionDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"airportIcao": {
						"type": "string"
					},
					"atcCallsign": {
						"type": "string"
					},
					"middleIdentifier": {
						"type": "string"
					},
					"position": {
						"type": "string"
					},
					"composePosition": {
						"type": "string"
					},
					"radarRange": {
						"type": "number"
					},
					"order": {
						"type": "number"
					},
					"frequency": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"airportIcao",
					"atcCallsign",
					"middleIdentifier",
					"position",
					"composePosition",
					"radarRange",
					"order",
					"frequency"
				]
			},
			"BaseCenterDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"countryId": {
						"type": "string"
					},
					"military": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"name",
					"countryId",
					"military"
				]
			},
			"PaginatedCenterDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseCenterDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"CenterDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"countryId": {
						"type": "string"
					},
					"military": {
						"type": "boolean"
					},
					"status": {
						"type": "boolean"
					},
					"regionMap": {
						"type": "array",
						"items": {
							"type": "object"
						}
					},
					"regionMapPolygon": {
						"items": {
							"type": "array"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"countryId",
					"military",
					"status",
					"regionMap",
					"regionMapPolygon"
				]
			},
			"PaginatedCountryDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CountryDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"BaseUserRatingDto": {
				"type": "object",
				"properties": {
					"isAtc": {
						"type": "boolean"
					},
					"isPilot": {
						"type": "boolean"
					},
					"pilotRating": {
						"$ref": "#/components/schemas/BaseRatingDto"
					},
					"atcRating": {
						"$ref": "#/components/schemas/BaseRatingDto"
					},
					"networkRating": {
						"$ref": "#/components/schemas/NetworkRatingDto"
					}
				},
				"required": [
					"isAtc",
					"isPilot",
					"pilotRating",
					"atcRating",
					"networkRating"
				]
			},
			"BaseUserDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"divisionId": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"rating": {
						"$ref": "#/components/schemas/BaseUserRatingDto"
					}
				},
				"required": [
					"id",
					"divisionId",
					"firstName",
					"lastName",
					"rating"
				]
			},
			"CreatorDto": {
				"type": "object",
				"properties": {
					"userId": {
						"type": "number"
					},
					"description": {
						"type": "string"
					},
					"tier": {
						"type": "number"
					},
					"user": {
						"$ref": "#/components/schemas/BaseUserDto"
					}
				},
				"required": [
					"userId",
					"description",
					"tier",
					"user"
				]
			},
			"PaginatedCreatorDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CreatorDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"LanguageDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"PaginatedLanguageDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LanguageDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"BaseNavaidDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"icao": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"frequency": {
						"type": "number"
					},
					"latitude": {
						"type": "number"
					},
					"longitude": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"name",
					"icao",
					"type",
					"frequency",
					"latitude",
					"longitude"
				]
			},
			"PaginatedNavaidDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseNavaidDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"NavaidDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"icao": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"frequency": {
						"type": "number"
					},
					"latitude": {
						"type": "number"
					},
					"longitude": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"name",
					"icao",
					"type",
					"frequency",
					"latitude",
					"longitude"
				]
			},
			"BaseNotamDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"specialAreaId": {
						"type": "string"
					},
					"startTime": {
						"type": "number"
					},
					"endTime": {
						"type": "number"
					},
					"description": {
						"type": "string"
					},
					"military": {
						"type": "boolean"
					},
					"centers": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"airports": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"id",
					"name",
					"specialAreaId",
					"startTime",
					"endTime",
					"description",
					"military",
					"centers",
					"airports"
				]
			},
			"PaginatedNotamDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseNotamDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"NotamDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"specialAreaId": {
						"type": "string"
					},
					"startTime": {
						"type": "number"
					},
					"endTime": {
						"type": "number"
					},
					"description": {
						"type": "string"
					},
					"military": {
						"type": "boolean"
					},
					"centers": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"airports": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"regionMap": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseRegionMapDto"
						}
					},
					"regionMapPolygon": {
						"items": {
							"type": "array"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"specialAreaId",
					"startTime",
					"endTime",
					"description",
					"military",
					"centers",
					"airports",
					"regionMap",
					"regionMapPolygon"
				]
			},
			"PositionDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"airportId": {
						"type": "string"
					},
					"centerId": {
						"type": "string"
					},
					"atcCallsign": {
						"type": "string"
					},
					"military": {
						"type": "boolean"
					},
					"position": {
						"type": "string"
					},
					"middleIdentifier": {
						"type": "string"
					},
					"frequency": {
						"type": "number"
					},
					"composePosition": {
						"type": "string"
					},
					"radarRange": {
						"type": "number"
					},
					"parentAtcPositionId": {
						"type": "number"
					},
					"parentSubcenterId": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"airportId",
					"centerId",
					"atcCallsign",
					"military",
					"position",
					"middleIdentifier",
					"frequency",
					"composePosition",
					"radarRange",
					"parentAtcPositionId",
					"parentSubcenterId"
				]
			},
			"BaseRunwayDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"airportIcao": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"airportIcao"
				]
			},
			"RunwayDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"airportIcao": {
						"type": "string"
					},
					"length": {
						"type": "string"
					},
					"bearing": {
						"type": "string"
					},
					"latitude": {
						"type": "number"
					},
					"longitude": {
						"type": "number"
					},
					"elevation": {
						"type": "number"
					},
					"width": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"airportIcao",
					"length",
					"bearing",
					"latitude",
					"longitude",
					"elevation",
					"width"
				]
			},
			"SectorDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"countryId": {
						"type": "string"
					},
					"country": {
						"$ref": "#/components/schemas/CountryDto"
					}
				},
				"required": [
					"id",
					"name",
					"countryId",
					"country"
				]
			},
			"PaginatedSectorDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SectorDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"SectorFileDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"sectorId": {
						"type": "string"
					},
					"valid": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"name",
					"sectorId",
					"valid"
				]
			},
			"ServerDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"hostname": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"ip": {
						"type": "string"
					},
					"countryId": {
						"type": "string"
					},
					"currentConnections": {
						"type": "number"
					},
					"maximumConnections": {
						"type": "number"
					},
					"active": {
						"type": "boolean"
					},
					"order": {
						"type": "number"
					},
					"pingedAt": {
						"format": "date-time",
						"type": "string"
					}
				},
				"required": [
					"id",
					"hostname",
					"description",
					"type",
					"ip",
					"countryId",
					"currentConnections",
					"maximumConnections",
					"active",
					"order",
					"pingedAt"
				]
			},
			"PaginatedServerDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ServerDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"SimulatorVersionDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"simulatorId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"version": {
						"type": "string"
					},
					"active": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"simulatorId",
					"name",
					"version",
					"active"
				]
			},
			"PaginatedSimulatorVersionDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SimulatorVersionDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"SimulatorDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"name",
					"isActive"
				]
			},
			"PaginatedSimulatorDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SimulatorDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"SoftwareDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"type": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"type",
					"name"
				]
			},
			"PaginatedSoftwareDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SoftwareDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"SoftwareFileDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"versionSuffix": {
						"type": "string"
					},
					"version": {
						"type": "string"
					},
					"softwareId": {
						"type": "number"
					},
					"extension": {
						"type": "string"
					},
					"valid": {
						"type": "boolean"
					},
					"downloads": {
						"type": "number"
					},
					"changeLog": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"versionSuffix",
					"version",
					"softwareId",
					"extension",
					"valid",
					"downloads",
					"changeLog"
				]
			},
			"BaseSpecialAreasDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"type": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"startTime": {
						"type": "string"
					},
					"endTime": {
						"type": "string"
					},
					"dayMon": {
						"type": "boolean"
					},
					"dayTue": {
						"type": "boolean"
					},
					"dayWed": {
						"type": "boolean"
					},
					"dayThu": {
						"type": "boolean"
					},
					"dayFri": {
						"type": "boolean"
					},
					"daySat": {
						"type": "boolean"
					},
					"daySun": {
						"type": "boolean"
					},
					"centers": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"activationDetails": {
						"type": "string"
					},
					"minimumAlt": {
						"type": "number"
					},
					"maximumAlt": {
						"type": "number"
					},
					"range": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"type",
					"name",
					"description",
					"startTime",
					"endTime",
					"dayMon",
					"dayTue",
					"dayWed",
					"dayThu",
					"dayFri",
					"daySat",
					"daySun",
					"centers",
					"activationDetails",
					"minimumAlt",
					"maximumAlt",
					"range"
				]
			},
			"PaginatedSpecialAreasDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseSpecialAreasDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"SpecialAreasDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"type": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"startTime": {
						"type": "string"
					},
					"endTime": {
						"type": "string"
					},
					"dayMon": {
						"type": "boolean"
					},
					"dayTue": {
						"type": "boolean"
					},
					"dayWed": {
						"type": "boolean"
					},
					"dayThu": {
						"type": "boolean"
					},
					"dayFri": {
						"type": "boolean"
					},
					"daySat": {
						"type": "boolean"
					},
					"daySun": {
						"type": "boolean"
					},
					"centers": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"activationDetails": {
						"type": "string"
					},
					"minimumAlt": {
						"type": "number"
					},
					"maximumAlt": {
						"type": "number"
					},
					"range": {
						"type": "boolean"
					},
					"regionMap": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseRegionMapDto"
						}
					},
					"regionMapPolygon": {
						"items": {
							"type": "array"
						},
						"type": "array"
					},
					"createdAt": {
						"format": "date-time",
						"type": "string"
					},
					"updatedAt": {
						"format": "date-time",
						"type": "string"
					}
				},
				"required": [
					"id",
					"type",
					"name",
					"description",
					"startTime",
					"endTime",
					"dayMon",
					"dayTue",
					"dayWed",
					"dayThu",
					"dayFri",
					"daySat",
					"daySun",
					"centers",
					"activationDetails",
					"minimumAlt",
					"maximumAlt",
					"range",
					"regionMap",
					"regionMapPolygon",
					"createdAt",
					"updatedAt"
				]
			},
			"SquawkDto": {
				"type": "object",
				"properties": {
					"length": {
						"type": "string"
					},
					"bearing": {
						"type": "string"
					},
					"latitude": {
						"type": "number"
					},
					"longitude": {
						"type": "number"
					},
					"elevation": {
						"type": "number"
					},
					"width": {
						"type": "number"
					}
				},
				"required": [
					"length",
					"bearing",
					"latitude",
					"longitude",
					"elevation",
					"width"
				]
			},
			"SquawkRequestDto": {
				"type": "object",
				"properties": {
					"originIcao": {
						"type": "string"
					},
					"destinationIcao": {
						"type": "string"
					},
					"flightRules": {
						"type": "string"
					},
					"military": {
						"type": "boolean"
					}
				},
				"required": [
					"originIcao",
					"destinationIcao"
				]
			},
			"SquawkGeneratedDto": {
				"type": "object",
				"properties": {
					"originMatch": {
						"type": "string"
					},
					"destinationMatch": {
						"type": "string"
					},
					"code": {
						"type": "string"
					}
				},
				"required": [
					"originMatch",
					"destinationMatch",
					"code"
				]
			},
			"BaseSubcenterInterfaces": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"centerId": {
						"type": "string"
					},
					"atcCallsign": {
						"type": "string"
					},
					"middleIdentifier": {
						"type": "string"
					},
					"position": {
						"type": "string"
					},
					"composePosition": {
						"type": "string"
					},
					"radarRange": {
						"type": "number"
					},
					"military": {
						"type": "boolean"
					},
					"frequency": {
						"type": "number"
					},
					"regionMap": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseRegionMapDto"
						}
					},
					"regionMapPolygon": {
						"items": {
							"type": "array"
						},
						"type": "array"
					},
					"latitude": {
						"type": "number"
					},
					"longitude": {
						"type": "number"
					},
					"center": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseCenterDto"
						}
					},
					"parentSubcenterId": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"centerId",
					"atcCallsign",
					"middleIdentifier",
					"position",
					"composePosition",
					"radarRange",
					"military",
					"frequency",
					"regionMap",
					"regionMapPolygon",
					"latitude",
					"longitude",
					"center",
					"parentSubcenterId"
				]
			},
			"BaseVirtualAirlineDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"airlineId": {
						"type": "string"
					},
					"website": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"airlineId",
					"website"
				]
			},
			"MixedVirtualAirlineDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"airlineId": {
						"type": "string"
					},
					"ceoVid": {
						"type": "number"
					},
					"website": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"divisionId": {
						"type": "string"
					},
					"status": {
						"type": "number"
					},
					"airline": {
						"type": "object"
					}
				},
				"required": [
					"id",
					"airlineId",
					"ceoVid",
					"website",
					"name",
					"divisionId",
					"status",
					"airline"
				]
			},
			"VirtualAirlineDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"airlineId": {
						"type": "string"
					},
					"website": {
						"type": "string"
					},
					"ceoVid": {
						"type": "number"
					},
					"ceoName": {
						"type": "string"
					},
					"ceoMail": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"airlineId",
					"website",
					"ceoVid",
					"ceoName",
					"ceoMail"
				]
			},
			"MetarDto": {
				"type": "object",
				"properties": {
					"airportIcao": {
						"type": "string"
					},
					"metar": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"airportIcao",
					"metar",
					"updatedAt"
				]
			},
			"ShortTafDto": {
				"type": "object",
				"properties": {
					"airportIcao": {
						"type": "string"
					},
					"shortTaf": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"airportIcao",
					"shortTaf",
					"updatedAt"
				]
			},
			"TafDto": {
				"type": "object",
				"properties": {
					"airportIcao": {
						"type": "string"
					},
					"taf": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"airportIcao",
					"taf",
					"updatedAt"
				]
			},
			"MotdDto": {
				"type": "object",
				"properties": {
					"timestamp": {
						"format": "date-time",
						"type": "string"
					},
					"contents": {
						"type": "string"
					},
					"createdBy": {
						"format": "int64",
						"type": "integer"
					}
				},
				"required": [
					"timestamp",
					"contents",
					"createdBy"
				]
			},
			"PaginatedRoutesDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RouteDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"DepartmentResponseDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"createdAt": {
						"format": "date-time",
						"type": "string"
					},
					"updatedAt": {
						"format": "date-time",
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"description",
					"createdAt",
					"updatedAt"
				]
			},
			"PaginatedDepartmentResponseDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DepartmentResponseDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"DepartmentTeamResponseDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"department": {
						"$ref": "#/components/schemas/DepartmentResponseDto"
					},
					"createdAt": {
						"format": "date-time",
						"type": "string"
					},
					"updatedAt": {
						"format": "date-time",
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"description",
					"department",
					"createdAt",
					"updatedAt"
				]
			},
			"PaginatedDepartmentTeamResponseDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DepartmentTeamResponseDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"DivisionDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"web": {
						"type": "string"
					},
					"mcd": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"enum": [
							-1,
							0,
							1
						]
					}
				},
				"required": [
					"id",
					"name",
					"web",
					"mcd",
					"status"
				]
			},
			"PaginatedDivisionDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/DivisionDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"UserHoursDto": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"pilot",
							"atc",
							"staff"
						]
					},
					"hours": {
						"type": "number",
						"description": "The user hours for this connection type in seconds."
					}
				},
				"required": [
					"type",
					"hours"
				]
			},
			"BaseRatingDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"shortName": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"shortName",
					"description"
				]
			},
			"NetworkRatingDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"description"
				]
			},
			"UserRatingDto": {
				"type": "object",
				"properties": {
					"isAtc": {
						"type": "boolean"
					},
					"isPilot": {
						"type": "boolean"
					},
					"pilotRating": {
						"$ref": "#/components/schemas/BaseRatingDto"
					},
					"atcRating": {
						"$ref": "#/components/schemas/BaseRatingDto"
					},
					"networkRating": {
						"$ref": "#/components/schemas/NetworkRatingDto"
					}
				}
			},
			"UserStatisticsDto": {
				"type": "object",
				"properties": {
					"hours": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserHoursDto"
						}
					},
					"rating": {
						"$ref": "#/components/schemas/UserRatingDto"
					},
					"id": {
						"type": "number"
					}
				},
				"required": [
					"id"
				]
			},
			"PaginatedUserStatisticsDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserStatisticsDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"UserGCA": {
				"type": "object",
				"properties": {}
			},
			"DivisionGCAHoldersDto": {
				"type": "object",
				"properties": {
					"gcas": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserGCA"
						}
					}
				},
				"required": [
					"gcas"
				]
			},
			"ATCPositionDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"airportId": {
						"type": "string"
					},
					"atcCallsign": {
						"type": "string"
					},
					"composePosition": {
						"type": "string"
					},
					"middleIdentifier": {
						"type": "string"
					},
					"position": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"airportId",
					"atcCallsign",
					"composePosition",
					"middleIdentifier",
					"position"
				]
			},
			"SubcenterDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"centerId": {
						"type": "string"
					},
					"atcCallsign": {
						"type": "string"
					},
					"composePosition": {
						"type": "string"
					},
					"middleIdentifier": {
						"type": "string"
					},
					"position": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"centerId",
					"atcCallsign",
					"composePosition",
					"middleIdentifier",
					"position"
				]
			},
			"FraExtendedDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"userId": {
						"type": "number"
					},
					"atcPositionId": {
						"type": "number"
					},
					"subcenterId": {
						"type": "number"
					},
					"startTime": {
						"type": "string",
						"example": "00:00"
					},
					"endTime": {
						"type": "string",
						"example": "00:00"
					},
					"dayMon": {
						"type": "boolean"
					},
					"dayTue": {
						"type": "boolean"
					},
					"dayWed": {
						"type": "boolean"
					},
					"dayThu": {
						"type": "boolean"
					},
					"dayFri": {
						"type": "boolean"
					},
					"daySat": {
						"type": "boolean"
					},
					"daySun": {
						"type": "boolean"
					},
					"date": {
						"format": "date-time",
						"type": "string"
					},
					"minAtc": {
						"type": "number"
					},
					"active": {
						"type": "boolean"
					},
					"atcPosition": {
						"$ref": "#/components/schemas/ATCPositionDto"
					},
					"subcenter": {
						"$ref": "#/components/schemas/SubcenterDto"
					}
				},
				"required": [
					"id",
					"userId",
					"atcPositionId",
					"subcenterId",
					"startTime",
					"endTime",
					"dayMon",
					"dayTue",
					"dayWed",
					"dayThu",
					"dayFri",
					"daySat",
					"daySun",
					"date",
					"minAtc",
					"active"
				]
			},
			"PaginatedFraExtendedDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FraExtendedDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"FraDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"userId": {
						"type": "number"
					},
					"atcPositionId": {
						"type": "number"
					},
					"subcenterId": {
						"type": "number"
					},
					"startTime": {
						"type": "string",
						"example": "00:00"
					},
					"endTime": {
						"type": "string",
						"example": "00:00"
					},
					"dayMon": {
						"type": "boolean"
					},
					"dayTue": {
						"type": "boolean"
					},
					"dayWed": {
						"type": "boolean"
					},
					"dayThu": {
						"type": "boolean"
					},
					"dayFri": {
						"type": "boolean"
					},
					"daySat": {
						"type": "boolean"
					},
					"daySun": {
						"type": "boolean"
					},
					"date": {
						"format": "date-time",
						"type": "string"
					},
					"minAtc": {
						"type": "number"
					},
					"active": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"userId",
					"atcPositionId",
					"subcenterId",
					"startTime",
					"endTime",
					"dayMon",
					"dayTue",
					"dayWed",
					"dayThu",
					"dayFri",
					"daySat",
					"daySun",
					"date",
					"minAtc",
					"active"
				]
			},
			"PaginatedFraDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FraDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"AllowedFraCheckDTO": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				]
			},
			"ErrorFraCheckDTO": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string"
					},
					"statusCode": {
						"type": "number"
					},
					"error": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"statusCode",
					"error"
				]
			},
			"UserPermissionInstanceRequestDto": {
				"type": "object",
				"properties": {
					"properties": {
						"type": "object"
					},
					"allowed": {
						"type": "boolean"
					},
					"userId": {
						"type": "string"
					}
				},
				"required": [
					"properties",
					"allowed",
					"userId"
				]
			},
			"UserStaffPositionPermissionInstanceRequestDto": {
				"type": "object",
				"properties": {
					"properties": {
						"type": "object"
					},
					"allowed": {
						"type": "boolean"
					},
					"userStaffPositionId": {
						"type": "string"
					}
				},
				"required": [
					"properties",
					"allowed",
					"userStaffPositionId"
				]
			},
			"StaffPositionPermissionInstanceRequestDto": {
				"type": "object",
				"properties": {
					"properties": {
						"type": "object"
					},
					"allowed": {
						"type": "boolean"
					},
					"staffPositionId": {
						"type": "string"
					}
				},
				"required": [
					"properties",
					"allowed",
					"staffPositionId"
				]
			},
			"DepartmentTeamPermissionInstanceRequestDto": {
				"type": "object",
				"properties": {
					"properties": {
						"type": "object"
					},
					"allowed": {
						"type": "boolean"
					},
					"departmentTeamId": {
						"type": "string"
					}
				},
				"required": [
					"properties",
					"allowed",
					"departmentTeamId"
				]
			},
			"DepartmentPermissionInstanceRequestDto": {
				"type": "object",
				"properties": {
					"properties": {
						"type": "object"
					},
					"allowed": {
						"type": "boolean"
					},
					"departmentId": {
						"type": "string"
					}
				},
				"required": [
					"properties",
					"allowed",
					"departmentId"
				]
			},
			"PermissionDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"properties": {
						"type": "object"
					}
				},
				"required": [
					"id",
					"description",
					"properties"
				]
			},
			"SettingRequestDto": {
				"type": "object",
				"properties": {
					"key": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				},
				"required": [
					"key",
					"value"
				]
			},
			"StaffPositionResponseDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"HQ",
							"DIV"
						]
					},
					"description": {
						"type": "string"
					},
					"departmentTeam": {
						"$ref": "#/components/schemas/DepartmentTeamResponseDto"
					},
					"createdAt": {
						"format": "date-time",
						"type": "string"
					},
					"updatedAt": {
						"format": "date-time",
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"type",
					"description",
					"departmentTeam",
					"createdAt",
					"updatedAt"
				]
			},
			"PaginatedStaffPositionResponseDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/StaffPositionResponseDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"UserStaffPositionResponseDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"userId": {
						"type": "number"
					},
					"divisionId": {
						"type": "string"
					},
					"centerId": {
						"type": "string"
					},
					"connectAs": {
						"type": "string"
					},
					"onTrial": {
						"type": "boolean"
					},
					"description": {
						"type": "string"
					},
					"remarks": {
						"type": "string"
					},
					"staffPosition": {
						"$ref": "#/components/schemas/StaffPositionResponseDto"
					},
					"createdAt": {
						"format": "date-time",
						"type": "string"
					},
					"updatedAt": {
						"format": "date-time",
						"type": "string"
					}
				},
				"required": [
					"id",
					"userId",
					"divisionId",
					"centerId",
					"connectAs",
					"onTrial",
					"description",
					"remarks",
					"staffPosition",
					"createdAt",
					"updatedAt"
				]
			},
			"PaginatedUserStaffPositionResponseDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserStaffPositionResponseDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"UserStaffDetailDto": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string"
					},
					"note": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"remark": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"note",
					"description",
					"remark"
				]
			},
			"NestedUserFamilyProfileDto": {
				"type": "object",
				"properties": {
					"discordUserId": {
						"type": "string",
						"description": "Requires 'discord' scope"
					}
				}
			},
			"NestedUserGCADto": {
				"type": "object",
				"properties": {
					"divisionId": {
						"type": "string"
					}
				},
				"required": [
					"divisionId"
				]
			},
			"NestedUserVirtualAirlineDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"name": {
						"type": "string"
					},
					"airlineId": {
						"type": "string"
					},
					"divisionId": {
						"type": "string"
					},
					"website": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"airlineId",
					"divisionId",
					"website"
				]
			},
			"NestedUserPrCreatorDto": {
				"type": "object",
				"properties": {
					"description": {
						"type": "string"
					},
					"tier": {
						"type": "number"
					}
				},
				"required": [
					"description",
					"tier"
				]
			},
			"NestedUserProfileDto": {
				"type": "object",
				"properties": {
					"city": {
						"type": "string",
						"description": "Requires 'location' scope"
					},
					"state": {
						"type": "string",
						"description": "Requires 'location' scope"
					},
					"birthday": {
						"type": "string",
						"description": "Requires 'birthday' scope"
					}
				}
			},
			"Department": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"DepartmentTeam": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"department": {
						"$ref": "#/components/schemas/Department"
					}
				},
				"required": [
					"id",
					"name",
					"department"
				]
			},
			"StaffPosition": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"departmentTeam": {
						"$ref": "#/components/schemas/DepartmentTeam"
					}
				},
				"required": [
					"id",
					"name",
					"type",
					"departmentTeam"
				]
			},
			"UserStaffPositionDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"staffPositionId": {
						"type": "string"
					},
					"divisionId": {
						"type": "string"
					},
					"centerId": {
						"type": "string"
					},
					"connectAs": {
						"type": "string"
					},
					"onTrial": {
						"type": "boolean"
					},
					"description": {
						"type": "string"
					},
					"staffPosition": {
						"$ref": "#/components/schemas/StaffPosition"
					}
				},
				"required": [
					"id",
					"staffPositionId",
					"divisionId",
					"centerId",
					"connectAs",
					"onTrial",
					"description",
					"staffPosition"
				]
			},
			"UserResponseDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"divisionId": {
						"type": "string"
					},
					"countryId": {
						"type": "string"
					},
					"languageId": {
						"type": "string"
					},
					"centerId": {
						"type": "string"
					},
					"isStaff": {
						"type": "boolean"
					},
					"createdAt": {
						"format": "date-time",
						"type": "string"
					},
					"rating": {
						"$ref": "#/components/schemas/UserRatingDto"
					},
					"hours": {
						"description": "The user connection hours for all connection types.",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserHoursDto"
						}
					},
					"userStaffDetails": {
						"$ref": "#/components/schemas/UserStaffDetailDto"
					},
					"familyProfile": {
						"$ref": "#/components/schemas/NestedUserFamilyProfileDto"
					},
					"gcas": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NestedUserGCADto"
						}
					},
					"ownedVirtualAirlines": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/NestedUserVirtualAirlineDto"
						}
					},
					"prCreator": {
						"$ref": "#/components/schemas/NestedUserPrCreatorDto"
					},
					"profile": {
						"$ref": "#/components/schemas/NestedUserProfileDto"
					},
					"publicNickname": {
						"type": "string"
					},
					"userStaffPositions": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserStaffPositionDto"
						}
					},
					"sub": {
						"type": "number",
						"description": "Requires 'openid' scope"
					},
					"given_name": {
						"type": "string",
						"description": "Requires 'openid' scope"
					},
					"family_name": {
						"type": "string",
						"description": "Requires 'openid' scope"
					},
					"nickname": {
						"type": "string",
						"description": "Requires 'openid' scope"
					}
				},
				"required": [
					"id",
					"firstName",
					"lastName",
					"email",
					"divisionId",
					"countryId",
					"languageId",
					"isStaff",
					"familyProfile",
					"gcas",
					"ownedVirtualAirlines",
					"prCreator",
					"profile",
					"publicNickname",
					"userStaffPositions"
				]
			},
			"UserStaffDetailsEmailDto": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				]
			},
			"UserStaffDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"isSupervisor": {
						"type": "boolean"
					},
					"userStaffPositions": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/UserStaffPositionDto"
						}
					},
					"userStaffDetails": {
						"$ref": "#/components/schemas/UserStaffDetailsEmailDto"
					}
				},
				"required": [
					"id",
					"firstName",
					"lastName",
					"email",
					"isSupervisor",
					"userStaffPositions",
					"userStaffDetails"
				]
			},
			"SwaggerResponsesDto": {
				"type": "object",
				"properties": {
					"statusCode": {
						"type": "number"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"error_uri": {
						"type": "string"
					}
				},
				"required": [
					"statusCode",
					"message",
					"error",
					"error_uri"
				]
			},
			"BaseUserAircraftDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"registration": {
						"type": "string"
					},
					"aircraftId": {
						"type": "string"
					},
					"selcal": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"registration",
					"aircraftId",
					"selcal"
				]
			},
			"PaginatedUserAircraftDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BaseUserAircraftDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"AircraftRequestDto": {
				"type": "object",
				"properties": {
					"aircraftId": {
						"type": "string"
					},
					"registration": {
						"type": "string"
					},
					"selcal": {
						"type": "string"
					},
					"remarks": {
						"type": "string"
					},
					"equipments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"transponderTypes": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"wakeTurbulence": {
						"type": "string"
					}
				},
				"required": [
					"aircraftId",
					"registration",
					"selcal",
					"remarks",
					"equipments",
					"transponderTypes",
					"wakeTurbulence"
				]
			},
			"UserAircraftDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"registration": {
						"type": "string"
					},
					"aircraftId": {
						"type": "string"
					},
					"selcal": {
						"type": "string"
					},
					"remarks": {
						"type": "string"
					},
					"equipments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"transponderTypes": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"id",
					"registration",
					"aircraftId",
					"selcal",
					"remarks",
					"equipments",
					"transponderTypes"
				]
			},
			"FlightPlanListDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"callsign": {
						"type": "string"
					},
					"userId": {
						"type": "number"
					},
					"aircraftId": {
						"type": "string"
					},
					"departureId": {
						"type": "string"
					},
					"arrivalId": {
						"type": "string"
					},
					"eobt": {
						"format": "date-time",
						"type": "string"
					},
					"isArchived": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"callsign",
					"userId",
					"aircraftId",
					"departureId",
					"arrivalId",
					"eobt",
					"isArchived"
				]
			},
			"PaginatedFlightPlanDto": {
				"type": "object",
				"properties": {
					"totalItems": {
						"type": "number"
					},
					"perPage": {
						"type": "number"
					},
					"page": {
						"type": "number"
					},
					"pages": {
						"type": "number"
					},
					"items": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/FlightPlanListDto"
						}
					}
				},
				"required": [
					"totalItems",
					"perPage",
					"page",
					"pages",
					"items"
				]
			},
			"CreateFlightPlanDto": {
				"type": "object",
				"properties": {
					"callsign": {
						"type": "string"
					},
					"flightRules": {
						"type": "string",
						"enum": [
							"I",
							"V",
							"Y",
							"Z"
						]
					},
					"flightType": {
						"type": "string",
						"enum": [
							"S",
							"N",
							"G",
							"M",
							"X"
						]
					},
					"aircraftNumber": {
						"type": "number"
					},
					"aircraftId": {
						"type": "string"
					},
					"aircraftWakeTurbulence": {
						"type": "string",
						"enum": [
							"L",
							"M",
							"H",
							"J"
						]
					},
					"aircraftEquipments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"aircraftTransponderTypes": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"departureId": {
						"type": "string"
					},
					"departureTime": {
						"type": "number",
						"description": "Seconds since 0000UTC"
					},
					"cruisingSpeedType": {
						"type": "string",
						"enum": [
							"N",
							"M",
							"K"
						]
					},
					"cruisingSpeed": {
						"type": "number"
					},
					"altitudeType": {
						"type": "string",
						"enum": [
							"F",
							"A",
							"S",
							"M",
							"VFR"
						]
					},
					"altitude": {
						"type": "number",
						"description": "null, if and only if, altitude type is set to VFR"
					},
					"route": {
						"type": "string"
					},
					"arrivalId": {
						"type": "string"
					},
					"eet": {
						"type": "number",
						"description": "time in seconds"
					},
					"alternativeId": {
						"type": "string"
					},
					"alternative2Id": {
						"type": "string"
					},
					"remarks": {
						"type": "string"
					},
					"endurance": {
						"type": "number",
						"description": "time in seconds"
					},
					"pob": {
						"type": "number"
					}
				},
				"required": [
					"callsign",
					"flightRules",
					"flightType",
					"aircraftId",
					"aircraftWakeTurbulence",
					"aircraftEquipments",
					"aircraftTransponderTypes",
					"departureId",
					"departureTime",
					"cruisingSpeedType",
					"cruisingSpeed",
					"altitudeType",
					"route",
					"arrivalId",
					"eet",
					"remarks",
					"endurance",
					"pob"
				]
			},
			"FlightPlanShowDto": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"callsign": {
						"type": "string"
					},
					"userId": {
						"type": "number"
					},
					"flightRules": {
						"type": "string",
						"enum": [
							"I",
							"V",
							"Y",
							"Z"
						]
					},
					"flightType": {
						"type": "string",
						"enum": [
							"S",
							"N",
							"G",
							"M",
							"X"
						]
					},
					"aircraftNumber": {
						"type": "number"
					},
					"aircraftId": {
						"type": "string"
					},
					"aircraftWakeTurbulence": {
						"type": "string",
						"enum": [
							"L",
							"M",
							"H",
							"J"
						]
					},
					"aircraftEquipments": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"aircraftTransponderTypes": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"departureId": {
						"type": "string"
					},
					"departureTime": {
						"type": "number",
						"description": "Seconds since 0000UTC"
					},
					"cruisingSpeedType": {
						"type": "string",
						"enum": [
							"N",
							"M",
							"K"
						]
					},
					"cruisingSpeed": {
						"type": "string"
					},
					"altitudeType": {
						"type": "string",
						"enum": [
							"F",
							"A",
							"S",
							"M",
							"VFR"
						]
					},
					"altitude": {
						"type": "number",
						"description": "null, if and only if, altitude type is set to VFR"
					},
					"route": {
						"type": "string"
					},
					"arrivalId": {
						"type": "string"
					},
					"eet": {
						"type": "number",
						"description": "time in seconds"
					},
					"alternativeId": {
						"type": "string"
					},
					"alternative2Id": {
						"type": "string"
					},
					"remarks": {
						"type": "string"
					},
					"endurance": {
						"type": "number",
						"description": "time in seconds"
					},
					"pob": {
						"type": "number"
					},
					"eobt": {
						"format": "date-time",
						"type": "string"
					},
					"isArchived": {
						"type": "boolean"
					},
					"pic": {
						"type": "string"
					},
					"level": {
						"type": "string"
					},
					"updatedAt": {
						"format": "date-time",
						"type": "string"
					}
				},
				"required": [
					"id",
					"callsign",
					"userId",
					"flightRules",
					"flightType",
					"aircraftId",
					"aircraftWakeTurbulence",
					"aircraftEquipments",
					"aircraftTransponderTypes",
					"departureId",
					"departureTime",
					"cruisingSpeedType",
					"cruisingSpeed",
					"altitudeType",
					"route",
					"arrivalId",
					"eet",
					"alternativeId",
					"remarks",
					"endurance",
					"pob",
					"eobt",
					"isArchived",
					"pic",
					"level",
					"updatedAt"
				]
			}
		}
	}
}