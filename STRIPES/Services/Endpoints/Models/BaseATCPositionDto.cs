// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace STRIPES.Services.Endpoints.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class BaseATCPositionDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The airportIcao property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AirportIcao { get; set; }
#nullable restore
#else
        public string AirportIcao { get; set; }
#endif
        /// <summary>The atcCallsign property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AtcCallsign { get; set; }
#nullable restore
#else
        public string AtcCallsign { get; set; }
#endif
        /// <summary>The composePosition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ComposePosition { get; set; }
#nullable restore
#else
        public string ComposePosition { get; set; }
#endif
        /// <summary>The frequency property</summary>
        public double? Frequency { get; set; }
        /// <summary>The id property</summary>
        public double? Id { get; set; }
        /// <summary>The middleIdentifier property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MiddleIdentifier { get; set; }
#nullable restore
#else
        public string MiddleIdentifier { get; set; }
#endif
        /// <summary>The order property</summary>
        public double? Order { get; set; }
        /// <summary>The position property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position { get; set; }
#nullable restore
#else
        public string Position { get; set; }
#endif
        /// <summary>The radarRange property</summary>
        public double? RadarRange { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::STRIPES.Services.Endpoints.Models.BaseATCPositionDto"/> and sets the default values.
        /// </summary>
        public BaseATCPositionDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::STRIPES.Services.Endpoints.Models.BaseATCPositionDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::STRIPES.Services.Endpoints.Models.BaseATCPositionDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::STRIPES.Services.Endpoints.Models.BaseATCPositionDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "airportIcao", n => { AirportIcao = n.GetStringValue(); } },
                { "atcCallsign", n => { AtcCallsign = n.GetStringValue(); } },
                { "composePosition", n => { ComposePosition = n.GetStringValue(); } },
                { "frequency", n => { Frequency = n.GetDoubleValue(); } },
                { "id", n => { Id = n.GetDoubleValue(); } },
                { "middleIdentifier", n => { MiddleIdentifier = n.GetStringValue(); } },
                { "order", n => { Order = n.GetDoubleValue(); } },
                { "position", n => { Position = n.GetStringValue(); } },
                { "radarRange", n => { RadarRange = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("airportIcao", AirportIcao);
            writer.WriteStringValue("atcCallsign", AtcCallsign);
            writer.WriteStringValue("composePosition", ComposePosition);
            writer.WriteDoubleValue("frequency", Frequency);
            writer.WriteDoubleValue("id", Id);
            writer.WriteStringValue("middleIdentifier", MiddleIdentifier);
            writer.WriteDoubleValue("order", Order);
            writer.WriteStringValue("position", Position);
            writer.WriteDoubleValue("radarRange", RadarRange);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
