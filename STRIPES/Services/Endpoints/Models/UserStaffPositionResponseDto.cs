// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace STRIPES.Services.Endpoints.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UserStaffPositionResponseDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The centerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CenterId { get; set; }
#nullable restore
#else
        public string CenterId { get; set; }
#endif
        /// <summary>The connectAs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConnectAs { get; set; }
#nullable restore
#else
        public string ConnectAs { get; set; }
#endif
        /// <summary>The createdAt property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The divisionId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DivisionId { get; set; }
#nullable restore
#else
        public string DivisionId { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The onTrial property</summary>
        public bool? OnTrial { get; set; }
        /// <summary>The remarks property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Remarks { get; set; }
#nullable restore
#else
        public string Remarks { get; set; }
#endif
        /// <summary>The staffPosition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::STRIPES.Services.Endpoints.Models.StaffPositionResponseDto? StaffPosition { get; set; }
#nullable restore
#else
        public global::STRIPES.Services.Endpoints.Models.StaffPositionResponseDto StaffPosition { get; set; }
#endif
        /// <summary>The updatedAt property</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>The userId property</summary>
        public double? UserId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::STRIPES.Services.Endpoints.Models.UserStaffPositionResponseDto"/> and sets the default values.
        /// </summary>
        public UserStaffPositionResponseDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::STRIPES.Services.Endpoints.Models.UserStaffPositionResponseDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::STRIPES.Services.Endpoints.Models.UserStaffPositionResponseDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::STRIPES.Services.Endpoints.Models.UserStaffPositionResponseDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "centerId", n => { CenterId = n.GetStringValue(); } },
                { "connectAs", n => { ConnectAs = n.GetStringValue(); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "divisionId", n => { DivisionId = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "onTrial", n => { OnTrial = n.GetBoolValue(); } },
                { "remarks", n => { Remarks = n.GetStringValue(); } },
                { "staffPosition", n => { StaffPosition = n.GetObjectValue<global::STRIPES.Services.Endpoints.Models.StaffPositionResponseDto>(global::STRIPES.Services.Endpoints.Models.StaffPositionResponseDto.CreateFromDiscriminatorValue); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "userId", n => { UserId = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("centerId", CenterId);
            writer.WriteStringValue("connectAs", ConnectAs);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("divisionId", DivisionId);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("onTrial", OnTrial);
            writer.WriteStringValue("remarks", Remarks);
            writer.WriteObjectValue<global::STRIPES.Services.Endpoints.Models.StaffPositionResponseDto>("staffPosition", StaffPosition);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteDoubleValue("userId", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
